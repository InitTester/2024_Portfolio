<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.portfolio.www.forum.board.dao.mybatis.BoardCommentRepository">

    <!-- 게시글 첨부파일 리스트 -->
    <select id="getBoardCommentList" parameterType="BoardCommentDto" resultType="BoardCommentDto">
		WITH RECURSIVE commentSort AS (
		    SELECT CAST(LPAD(comment_seq, 5, '0') AS CHAR(100)) AS cs,
			       comment_seq,
			       parent_comment_seq,
			       content,
			       board_seq,
			       board_type_seq,
			       reg_dtm,
			       update_dtm,
			       delete_dtm,
			       member_seq,
			       0 AS lvl
			  FROM board_comment
			 WHERE parent_comment_seq IS NULL        
	     UNION ALL
		    SELECT CONCAT(cs.cs, '.', LPAD(bc.comment_seq, 5, '0')) AS cs,
			       bc.comment_seq,
			       bc.parent_comment_seq,
			       bc.content,
			       bc.board_seq,
			       bc.board_type_seq,
			       bc.reg_dtm,
			       bc.update_dtm,
			       bc.delete_dtm,
			       bc.member_seq,
			       cs.lvl + 1
			  FROM board_comment bc
	    INNER JOIN commentSort cs ON bc.parent_comment_seq = cs.comment_seq)
		    SELECT cs.comment_seq,
				   cs.lvl,
				   cs.content,
				   cs.board_seq,
				   cs.board_type_seq,
				   cs.member_seq,
				   cs.parent_comment_seq AS parent_seq,
				   cs.content,
				   cs.update_dtm,
				   cs.delete_dtm,
				   m.member_nm
			  FROM commentSort cs
		      JOIN member m ON cs.member_seq = m.member_seq
			 WHERE cs.board_type_seq = #{boardTypeSeq}
		      AND cs.board_seq = #{boardSeq}
		 ORDER BY cs.cs;
    </select>
    
    <!-- 게시글 댓글 추가 -->
    <insert id ="newComment" parameterType="BoardCommentDto">
    	
    	<selectKey order="AFTER" keyProperty="commentSeq" keyColumn="comment_seq" resultType = "int">
    		SELECT LAST_INSERT_ID()
    	</selectKey>
    	    
    	INSERT INTO board_comment (lvl,
    	   						   content,
    	   						   board_seq,
    	   						   board_type_seq,
    	   						   member_seq,
    	   						   parent_comment_seq,
    	   						   reg_dtm)
    	   			       VALUES (#{lvl},
    	   			               #{content},
    	   			               #{boardSeq},
    	   			               #{boardTypeSeq},
    	   			               #{memberSeq},
    	   			               #{parentSeq},
    	   			               DATE_FORMAT(NOW(),'%Y%m%d%H%i%s'))
    </insert>
    
    <update id ="updateParentComment">
    	UPDATE board_comment
    	   SET parent_comment_seq = #{commentSeq}
    	 WHERE comment_seq = #{commentSeq}
<!--  		 WHERE board_type_seq = #{boardTypeSeq}
 		   AND board_seq = #{boardSeq}
 		   AND comment_seq = #{commentSeq}  -->
    </update>
    
    <delete id="deleteComment" parameterType="BoardCommentDto">
    	DELETE FROM board_comment
   		      WHERE board_type_seq = #{boardTypeSeq}
   		        AND board_seq = #{boardSeq}
   		        AND comment_seq = #{commentSeq}
    </delete>
    
    <update id="editComment" parameterType="BoardCommentDto">
    	UPDATE board_comment
    	   SET content = #{content},
    	  	   update_dtm = DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
 		 WHERE board_type_seq = #{boardTypeSeq}
 		   AND board_seq = #{boardSeq}
 		   AND comment_seq = #{commentSeq}
    </update>
    
</mapper>